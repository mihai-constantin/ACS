#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 716 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 15 3 0 0
0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 37 #"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 38 #"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 34 #"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 35 #"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 35 #"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 15 3 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #" Liberation Mono\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 166 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 166 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 166 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 40 #"framework:syntax-coloring:scheme:symbol\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 40 #"framework:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 42 #"framework:syntax-coloring:scheme:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 45 #"framework:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 39 #"framework:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"framework:syntax-coloring:scheme:other\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 49 #"drscheme:check-syntax:lexically-bound-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 42 #"drscheme:check-syntax:imported-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 36 #"profj:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 40 #"profj:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 94 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 208 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 204 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 203 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 207 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 208 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 203 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 207 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 208 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 204 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 203 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 207 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 205 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 205 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 205 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 205 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 204 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 2 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0
0 -1 -1 2 30 #"drscheme:check-syntax:keyword\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0
0 -1 -1 2 39 #"drscheme:check-syntax:unbound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 37 #"drscheme:check-syntax:bound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 32 #"drscheme:check-syntax:primitive\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 2 32 #"drscheme:check-syntax:tail-call\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 2 27 #"drscheme:check-syntax:base\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
2 -1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
2 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 0 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0
1.0 0 0 0 0 0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 64 108 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 70 1 #"\0"
0.6000000238418579 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 75 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 132 60 36 0 0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.75 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 132 60 36 0 0 0 0 -1 2 1 #"\0"
0 70 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0
1.0 0 0 0 0 0 0 0 -1 2 1 #"\0"
0 75 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 36 36 140 0 0 0 0 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 14 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 26 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 0 1 #"\0"
0 70 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 137 0 17 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 181 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 53 31 7 0 0
0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 156 66 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 35 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 175 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 175 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 175 220 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 10 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 204 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 255 102
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 111 207
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 103 15 16 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
169 169 169 -1 -1 0 1 #"\0"
0 75 8 #"Candara\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 7 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 7 12 94 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 183 183 183
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 130 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 128
0 0 0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 102
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 14 #"Menlo Regular\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Pragmata\0"
0.0 9 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Pragmata TT\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Liberation Mono\0"
0.0 9 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 10 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 23 #"Letter Gothic Std Bold\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 13 #" Andale Mono\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 64 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 64 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 444 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 19 #"Courier New Italic\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 234 74 131 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 120 96 191 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 12 165 160 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 4 142 142 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 90 202 23 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 239 199 39 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 51 51 0 0
0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 90 22 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 97 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 130 72 32 0
0 0 -1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 18 #" DejaVu Sans Mono\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 77 1 #"\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 444 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 444 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 12 111 49 0
0 0 -1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 77 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 102 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 27 13 0
0 0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 23 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 48 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 28 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 74 99 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 91 125 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 55 122 196 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 103 156 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 124 41 87 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 180 73 177 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 43 100 100 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 128
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 64 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 1 61 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 5 104 154 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 124 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 64 0 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 128 0 64 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 1 61 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 5 104 154 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 5 104 154 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 0 64 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 14 73 122 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 64 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 196 49 169 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 30 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 78 143 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 124 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 3 1 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 217 144 74 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 7 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 16 14 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 5 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 179 13 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 37 0 136 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 64 0 128 128
128 255 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 0.0 0.0
0.0 0 0 0 0 0 0 0 0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 157 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 82 46 7 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 78 143 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 126 71 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 149 188 143
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 145 146 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 212 139 103
0 0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 49 94 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 95 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 32 146 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 149 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 145 146 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 145 145 145
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 176 221
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 165 197 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 147 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 78 136 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 0 1 #"\0"
0 75 14 #"Comic Sans MS\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 173 102 27 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Arial\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 90 183 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 63 56 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 90 183 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 63 56 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 87 117 189 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 165 67 139 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 189 132
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 75 115 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Andale Mono\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 129 37 123 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 189 113
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 37 116 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 147 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 13 #"Miriam Fixed\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 64 128 128 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 23 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 29 47 78 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 9 45 140 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 83 113 64 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 18 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 18 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 234 142 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 20 9 2 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 155 192 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 108 48 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 111 71 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 206 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 206 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 206 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 203 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 63
111 150 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 63
111 150 -1 -1 0 1 #"\0"
0 75 14 #"Lucida Grande\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 25 #"Bitstream Vera Sans Mono\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 255
228 225 -1 -1 0 1 #"\0"
0 75 19 #"Prestige Elite Std\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 3369 0 28 3 16 #"#lang racket/gui"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; ignora\310\233i urm\304\203toarele linii de cod."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #" () "
0 0 14 3 14 #"your-code-here"
0 0 24 3 3 #")) "
0 0 17 3 52
(
 #"; ce rezultate default sunt \303\256ntoarse \303\256n exerci\310\233"
 #"ii"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"show-defaults"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 17 3 83
(
 #"; c\303\242te exerci\310\233ii la care s-au \303\256ntors rezultate "
 #"default s\304\203 fie ar\304\203tate detaliat"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 12 #"exerci\310\233iile"
0 0 24 3 3 #")) "
0 0 17 3 89
(
 #"; variante: '(exerci\310\233iul . exerci\310\233iile) sau '(testul ."
 #" testele) sau '(task . taskurile)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"separator"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"punct"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ex"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"sep"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 14 3 2 #"ex"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"check-exp"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 2 #") "
0 0 14 3 4 #"n-ex"
0 0 24 3 2 #") "
0 0 15 3 8 #"defaults"
0 0 24 3 5 #"))) ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 2 #") "
0 0 14 3 13 #"show-defaults"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"NU:"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 2 #") "
0 0 14 3 4 #"n-ex"
0 0 24 3 2 #") "
0 0 14 3 10 #"rezultatul"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 7 #"difer\304\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"de"
0 0 24 3 1 #" "
0 0 14 3 3 #"cel"
0 0 24 3 1 #" "
0 0 14 3 10 #"a\310\231teptat:"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"expected"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"pts"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 24 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"+~v: \""
0 0 24 3 1 #" "
0 0 14 3 3 #"pts"
0 0 24 3 3 #") ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"OK: \""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 2 #") "
0 0 14 3 4 #"n-ex"
0 0 24 3 2 #") "
0 0 14 3 9 #"rezolvat:"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"pts"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"pts"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"punct"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"puncte"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 14 3 3 #"pts"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sumar"
0 0 24 3 3 #") ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"show-defaults"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"..."
0 0 24 3 1 #" "
0 0 14 3 10 #"rezultatul"
0 0 24 3 1 #" "
0 0 14 3 8 #"implicit"
0 0 24 3 1 #" "
0 0 14 3 3 #"dat"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 6 #"total:"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 7 #"require"
0 0 17 3 2 #" ("
0 0 17 3 3 #"lib"
0 0 17 3 13 #" \"trace.ss\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50
#";; Se urm\304\203re\310\231te rezolvarea urm\304\203toarei probleme:"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; Pornind de la o imagine dat\304\203, s\304\203 se genereze o imag"
 #"ine compus\304\203, rezultat\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; prin suprapunerea mai multor instan\310\233e ale imaginii ini\310"
 #"\233iale, rotite"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; cu diferite unghiuri. Se va utiliza recursivitate pe stiv\304\203"
 #" \310\231i/sau pe coad\304\203."
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 55
(
 #";; Problema va fi descomp"
 #"us\304\203 \303\256n urm\304\203toarele p\304\203r\310\233i:"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; * inversarea unei liste (necesar\304\203, de obicei, func\310\233"
 #"iilor recursive pe coad\304\203);"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; * parti\310\233ionarea unei liste;"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; * eliminarea duplicatelor dintr-o list\304\203 \310\231i determin"
 #"area num\304\203rului de apari\310\233ii;"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; * determinarea prefixului comun, respectiv sufixului comun pentru"
 #" dou\304\203 liste;"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
(
 #";; * suprapunerea instan\310\233elor unei imagini \303\256ntr-o imag"
 #"ine unic\304\203.;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"cool-ellipse"
0 0 24 3 1 #" "
0 0 14 3 5 #"angle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 14 3 5 #"angle"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"angle"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #") "
0 0 21 3 3 #"255"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"GEN-IMAGES"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"star"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"star-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"star"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"rhombus"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"star-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"star"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"GEN-BONUS-IMAGES"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"star"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"star-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"GEN-INITIAL"
0 0 24 3 3 #") ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 14 3 11 #"empty-image"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 12 #"cool-ellipse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"91"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"TEST-4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"rhombus"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"star-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #")  ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"star"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"TEST-5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 7 #"rhombus"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"star-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"star"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BONUS-IMAGES"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 6           4 21 2786
(
 #"(#(struct:overlay #(struct:translate 60.0 0 #(struct:translate 0 150"
 #".0 #(struct:translate 15 -75 #(struct:ellipse 30 150 0 255 #(struct:"
 #"color 0 0 255 64))))) #(struct:translate 0 1.0935045065594124 #(stru"
 #"ct:overlay #(struct:translate 55.30660202306246 0 #(struct:translate"
 #" -8.102331643265362 145.16235430435222 #(struct:translate 27.7957296"
 #"20202902 -71.25585881091163 #(struct:ellipse 150 30 80 255 #(struct:"
 #"color 0 0 255 57))))) #(struct:translate 0 3.243067920039948 #(struc"
 #"t:overlay #(struct:translate 45.73090360843438 0 #(struct:translate "
 #"-10.477803669648168 136.01007198245873 #(struct:translate 39.7469000"
 #"61213786 -65.34664440905809 #(struct:ellipse 150 30 70 255 #(struct:"
 #"color 0 0 255 50))))) #(struct:translate 0 5.279943420290536 #(struc"
 #"t:overlay #(struct:translate 35.313730334031135 0 #(struct:translate"
 #" -10.804111390797722 122.835389436943 #(struct:translate 50.49038105"
 #"676659 -57.4519052838329 #(struct:ellipse 150 30 60 255 #(struct:col"
 #"or 0 0 255 42))))) #(struct:translate 0 7.12672420457956 #(struct:ov"
 #"erlay #(struct:translate 25.44044067690585 0 #(struct:translate -10."
 #"140178050180971 106.0682790371558 #(struct:translate 59.699737373275"
 #"12 -47.81151908862526 #(struct:ellipse 150 30 50 255 #(struct:color "
 #"0 0 255 35))))) #(struct:translate 0 8.697200625436409 #(struct:over"
 #"lay #(struct:translate 16.74324005146947 0 #(struct:translate -8.838"
 #"387430690908 86.27796340279991 #(struct:translate 67.09514737922144 "
 #"-36.71840407970578 #(struct:ellipse 150 30 40 255 #(struct:color 0 0"
 #" 255 28))))) #(struct:translate 0 9.873289657125284 #(struct:overlay"
 #" #(struct:translate 9.61651584688991 0 #(struct:translate -7.0684211"
 #"30722797 64.19588860920226 #(struct:translate 72.4519052838329 -24.5"
 #"09618943233413 #(struct:ellipse 150 30 30 255 #(struct:color 0 0 255"
 #" 21))))) #(struct:translate 0 10.41717327440324 #(struct:overlay #(s"
 #"truct:translate 4.336572426599346 0 #(struct:translate -4.9438211354"
 #"27498 40.82521782920214 #(struct:translate 75.60724870882815 -11.556"
 #"121437636527 #(struct:ellipse 150 30 20 255 #(struct:color 0 0 255 1"
 #"4))))) #(struct:translate 0 9.575698414628079 #(struct:overlay #(str"
 #"uct:translate 1.0935045065594409 0 #(struct:translate -2.55880864747"
 #"89833 17.94489500677419 #(struct:translate 76.46530414091956 1.74850"
 #"29701633454 #(struct:ellipse 150 30 10 255 #(struct:color 0 0 255 10"
 #"))))) #(struct:translate 0 4.693397976937533 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 -0.0 #(struct:translate 75 15 "
 #"#(struct:ellipse 150 30 0 255 #(struct:color 0 0 255 10))))) #(struc"
 #"t:translate 75 15.0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 25"
 #"5 \"black\")))))))))))))))))))))) #(struct:bb 150.0 150.0 150.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; 0. (Introductiv)"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Exerci\310\233iul 2 din laboratorul 1 solicita implementarea func"
 #"\310\233iei de inversare,"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";; pornind de la urm\304\203toarele axiome:"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; rev([ ]) = [ ]"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; rev(x:l) = rev(l) ++ [x]"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Ce tip de recursivitate este surprins aici?"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; recursivitate pe stiva"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"punct"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Implementa\310\233i func\310\233ia de inversare utiliz\303\242nd "
 #"cel\304\203lalt tip de recursivitate."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Implementam o functie care inverseaza o lista folosind recursivita"
 #"tea pe coada"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"rev-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"() ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rev-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 14 3 7 #"revList"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"revList"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"rev-iter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"revList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"check-exp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(trace rev-iter)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 8 #"rev-iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 6 #") '())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";; P\304\203stra\310\233i dintr-o list\304\203 de imagini doar acele"
 #" imagini care au \303\256n\304\203l\310\233"
 #"imea mai mic\304\203 dec\303\242t height."
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Pentru a determina \303\256n\304\203l\310\233imea unei imagini fo"
 #"losi\310\233i func\310\233ia image-height. "
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Exemplu: (image-height (ellipse 30 40 \"solid\" \"orange\"))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Func\310\233ia va fi recursiv\304\203 pe stiv\304\203."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lesser"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #") ("
0 0 14 3 6 #"lesser"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 6 #"height"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"lesser"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 6 #"height"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lesser"
0 0 24 3 2 #" ("
0 0 14 3 7 #"flatten"
0 0 24 3 2 #" ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 5 #")]) ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"80"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 89
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"blue\")) #("
 #"struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 90
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"green\")) #"
 #"(struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"red\")) #(s"
 #"truct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"yellow\")) "
 #"#(struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 87
(
 #"(#(struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"blue\")) #(st"
 #"ruct:bb 10 10 10) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"green\")) #(s"
 #"truct:bb 10 10 10) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 86
(
 #"(#(struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"red\")) #(str"
 #"uct:bb 10 10 10) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"yellow\")) #("
 #"struct:bb 10 10 10) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"blue\")) #("
 #"struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 90
(
 #"(#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"green\")) #"
 #"(struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"red\")) #(s"
 #"truct:bb 40 40 40) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"yellow\")) "
 #"#(struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"blue\")) #("
 #"struct:bb 60 60 60) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 90
(
 #"(#(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"green\")) #"
 #"(struct:bb 60 60 60) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"red\")) #(s"
 #"truct:bb 60 60 60) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"yellow\")) "
 #"#(struct:bb 60 60 60) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lesser"
0 0 24 3 2 #" ("
0 0 14 3 7 #"flatten"
0 0 24 3 2 #" ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 5 #")]) ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lesser"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lesser"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 249
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 -0.0 43.30127018922194 "
 #"0 0) #(struct:pulled-point 0 0 50.0 43.30127018922194 0 0) #(struct:"
 #"pulled-point 0 0 25.00000000000001 0.0 0 0)) 255 \"red\") #(struct:b"
 #"b 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 249
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 -0.0 43.30127018922194 "
 #"0 0) #(struct:pulled-point 0 0 50.0 43.30127018922194 0 0) #(struct:"
 #"pulled-point 0 0 25.00000000000001 0.0 0 0)) 255 \"red\") #(struct:b"
 #"b 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 249
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 -0.0 43.30127018922194 "
 #"0 0) #(struct:pulled-point 0 0 50.0 43.30127018922194 0 0) #(struct:"
 #"pulled-point 0 0 25.00000000000001 0.0 0 0)) 255 \"red\") #(struct:b"
 #"b 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 732
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 16.77050983124842 46.16"
 #"52530576288 0 0) #(struct:pulled-point 0 0 31.77050983124842 46.1652"
 #"530576288 0 0) #(struct:pulled-point 0 0 43.905764746872634 37.34847"
 #"4273241706 0 0) #(struct:pulled-point 0 0 48.54101966249685 23.08262"
 #"65288144 0 0) #(struct:pulled-point 0 0 43.905764746872634 8.8167787"
 #"84387097 0 0) #(struct:pulled-point 0 0 31.770509831248425 0.0 0 0) "
 #"#(struct:pulled-point 0 0 16.770509831248425 0.0 0 0) #(struct:pulle"
 #"d-point 0 0 4.635254915624214 8.816778784387097 0 0) #(struct:pulled"
 #"-point 0 0 0.0 23.0826265288144 0 0) #(struct:pulled-point 0 0 4.635"
 #"254915624209 37.348474273241706 0 0)) 255 \"violet\") #(struct:bb 48"
 #".54101966249685 46.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";(trace lesser)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"lesser"
0 0 17 3 1 #" "
0 0 17 3 6 #"IMAGES"
0 0 17 3 4 #" 50)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #";; P\304\203stra\310\233i dintr-o list\304\203 de imagini doar acele"
 #" imagini care au \303\256n\304\203l\310\233"
 #"imea mai mare sau egal\304\203 cu height."
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Func\310\233ia va fi recursiv\304\203 pe coad\304\203."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"greater-iter"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 6 #"height"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"greater-iter"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #" "
0 0 14 3 7 #"resList"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"resList"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 12 #"greater-iter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"resList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 12 #"greater-iter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 7 #"resList"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 201
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:"
 #"pulled-point 0 0 0 50 0 0)) 255 \"blue\") #(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 348
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 14.999999999999993 -0.0"
 #" 0 0) #(struct:pulled-point 0 0 29.99999999999999 25.98076211353316 "
 #"0 0) #(struct:pulled-point 0 0 14.999999999999996 51.96152422706632 "
 #"0 0) #(struct:pulled-point 0 0 0.0 25.98076211353316 0 0)) 255 \"mag"
 #"enta\") #(struct:bb 29.99999999999999 51.96152422706632 51.961524227"
 #"06632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 604
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 17.677669529663692 60.3"
 #"5533905932738 0 0) #(struct:pulled-point 0 0 42.67766952966369 60.35"
 #"533905932738 0 0) #(struct:pulled-point 0 0 60.35533905932738 42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 60.35533905932738 17.6776"
 #"6952966369 0 0) #(struct:pulled-point 0 0 42.677669529663696 0.0 0 0"
 #") #(struct:pulled-point 0 0 17.677669529663696 0.0 0 0) #(struct:pul"
 #"led-point 0 0 3.552713678800501e-15 17.67766952966369 0 0) #(struct:"
 #"pulled-point 0 0 0.0 42.67766952966369 0 0)) 255 \"green\") #(struct"
 #":bb 60.35533905932738 60.35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 735
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 22.360679774997905 61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 64.7213595499958 30.776"
 #"83537175254 0 0) #(struct:pulled-point 0 0 22.360679774997905 0.0 0 "
 #"0) #(struct:pulled-point 0 0 6.1803398874989455 49.7979656976556 0 0"
 #") #(struct:pulled-point 0 0 58.54101966249685 49.79796569765561 0 0)"
 #" #(struct:pulled-point 0 0 42.360679774997905 0.0 0 0) #(struct:pull"
 #"ed-point 0 0 0.0 30.77683537175253 0 0) #(struct:pulled-point 0 0 42"
 #".360679774997905 61.55367074350507 0 0) #(struct:pulled-point 0 0 58"
 #".54101966249685 11.755705045849467 0 0) #(struct:pulled-point 0 0 6."
 #"180339887498953 11.75570504584946 0 0)) 255 \"purple\") #(struct:bb "
 #"64.7213595499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 415
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 12.360679774997898 61.5"
 #"53670743505066 0 0) #(struct:pulled-point 0 0 64.7213595499958 23.51"
 #"1410091698927 0 0) #(struct:pulled-point 0 0 0.0 23.51141009169892 0"
 #" 0) #(struct:pulled-point 0 0 52.3606797749979 61.553670743505066 0 "
 #"0) #(struct:pulled-point 0 0 32.360679774997905 0.0 0 0)) 255 \"oran"
 #"ge\") #(struct:bb 64.7213595499958 61.553670743505066 61.55367074350"
 #"5066) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 7 #"greater"
0 0 24 3 2 #" ("
0 0 14 3 7 #"flatten"
0 0 24 3 2 #" ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 5 #")]) ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"80"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 89
(
 #"(#(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"blue\")) #("
 #"struct:bb 80 80 80) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 90
(
 #"(#(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"green\")) #"
 #"(struct:bb 80 80 80) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"red\")) #(s"
 #"truct:bb 80 80 80) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"yellow\")) "
 #"#(struct:bb 80 80 80) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 94
(
 #"(#(struct:translate 50 50 #(struct:ellipse 100 100 0 255 \"blue\")) "
 #"#(struct:bb 100 100 100) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 95
(
 #"(#(struct:translate 50 50 #(struct:ellipse 100 100 0 255 \"green\"))"
 #" #(struct:bb 100 100 100) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 93
(
 #"(#(struct:translate 50 50 #(struct:ellipse 100 100 0 255 \"red\")) #"
 #"(struct:bb 100 100 100) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 96
(
 #"(#(struct:translate 50 50 #(struct:ellipse 100 100 0 255 \"yellow\")"
 #") #(struct:bb 100 100 100) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 12 #"BONUS-IMAGES"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 201
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:"
 #"pulled-point 0 0 0 50 0 0)) 255 \"blue\") #(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 415
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 12.360679774997898 61.5"
 #"53670743505066 0 0) #(struct:pulled-point 0 0 64.7213595499958 23.51"
 #"1410091698927 0 0) #(struct:pulled-point 0 0 0.0 23.51141009169892 0"
 #" 0) #(struct:pulled-point 0 0 52.3606797749979 61.553670743505066 0 "
 #"0) #(struct:pulled-point 0 0 32.360679774997905 0.0 0 0)) 255 \"oran"
 #"ge\") #(struct:bb 64.7213595499958 61.553670743505066 61.55367074350"
 #"5066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 604
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 17.677669529663692 60.3"
 #"5533905932738 0 0) #(struct:pulled-point 0 0 42.67766952966369 60.35"
 #"533905932738 0 0) #(struct:pulled-point 0 0 60.35533905932738 42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 60.35533905932738 17.6776"
 #"6952966369 0 0) #(struct:pulled-point 0 0 42.677669529663696 0.0 0 0"
 #") #(struct:pulled-point 0 0 17.677669529663696 0.0 0 0) #(struct:pul"
 #"led-point 0 0 3.552713678800501e-15 17.67766952966369 0 0) #(struct:"
 #"pulled-point 0 0 0.0 42.67766952966369 0 0)) 255 \"green\") #(struct"
 #":bb 60.35533905932738 60.35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 735
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 22.360679774997905 61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 64.7213595499958 30.776"
 #"83537175254 0 0) #(struct:pulled-point 0 0 22.360679774997905 0.0 0 "
 #"0) #(struct:pulled-point 0 0 6.1803398874989455 49.7979656976556 0 0"
 #") #(struct:pulled-point 0 0 58.54101966249685 49.79796569765561 0 0)"
 #" #(struct:pulled-point 0 0 42.360679774997905 0.0 0 0) #(struct:pull"
 #"ed-point 0 0 0.0 30.77683537175253 0 0) #(struct:pulled-point 0 0 42"
 #".360679774997905 61.55367074350507 0 0) #(struct:pulled-point 0 0 58"
 #".54101966249685 11.755705045849467 0 0) #(struct:pulled-point 0 0 6."
 #"180339887498953 11.75570504584946 0 0)) 255 \"purple\") #(struct:bb "
 #"64.7213595499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #" ())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(trace greater-iter)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 12 #"greater-iter"
0 0 17 3 1 #" "
0 0 17 3 12 #"BONUS-IMAGES"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"() 50)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; P\304\203stra\310\233i dintr-o lis"
 #"t\304\203 prima apari\310\233ie a elementelor duplicat. "
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Care este tipul natural de recursivitate pentru aceast\304\203 fu"
 #"nc\310\233ie?"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Rezolvare utilizand recursivitatea pe coada"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-duplicates-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"remove-duplicates-left-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"remove-duplicates-left-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 14 3 7 #"my_list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"my_list"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 7 #"my_list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 27 #"remove-duplicates-left-iter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 7 #"my_list"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 27 #"remove-duplicates-left-iter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"my_list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 8 #"()))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-duplicates-left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-duplicates-left"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";(trace remove-duplicates-left-iter)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 27 #"remove-duplicates-left-iter"
0 0 17 3 1 #" "
0 0 17 3 6 #"IMAGES"
0 0 17 3 5 #" '())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; P\304\203stra\310\233i dintr-o lis"
 #"t\304\203 ultima apari\310\233ie a elementelor duplicat. Elementele "
 #"din"
) 0 0 24 29 1 #"\n"
0 0 17 3 44
#";; lista final\304\203 vor fi \303\256n aceea\310\231i ordine."
0 0 24 29 1 #"\n"
0 0 17 3 64
(
 #";; NU folosi\310\233i inversarea de liste \303\256n rezolvarea exerc"
 #"i\310\233iului"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Care este tipul natural de recursivitate pentru aceast\304\203 fu"
 #"nc\310\233ie?"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Rezolvare folosind recursivitatea pe stiva"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-duplicates-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 23 #"remove-duplicates-right"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 23 #"remove-duplicates-right"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 23 #"remove-duplicates-right"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-duplicates-right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-duplicates-right"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMAGES"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(trace remove-duplicates-right)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 23 #"remove-duplicates-right"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 4 #" 3))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; Determina\310\233i prefixul comun pentru dou\304\203 liste, utili"
 #"z\303\242nd o func\310\233ie recursiv\304\203."
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; Rezolvarea s-a realizat printr-o functie recursiva pe coada"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-prefix"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"common-prefix-iter"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"common-prefix-iter"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #" "
0 0 14 3 10 #"prefixList"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 10 #"prefixList"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 18 #"common-prefix-iter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"prefixList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 10 #"prefixList"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-prefix"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-prefix"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 442
(
 #"(#(struct:translate 12.360679774997898 61.553670743505066 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 52.3606797749979 -38.04226065180614 0 0) #(struct:pulled-point 0 0 "
 #"-12.360679774997898 -38.042260651806146 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 -61.553670"
 #"743505066 0 0)) 255 \"orange\")) #(struct:bb 64.7213595499958 61.553"
 #"670743505066 61.553670743505066) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"yellow\")) "
 #"#(struct:bb 50 50 50) #f)"
) 0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";(trace common-prefix-iter)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 18 #"common-prefix-iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"9"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 6 #") '())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; Determina\310\233i sufixul comun pentru dou\304\203 liste, utiliz"
 #"\303\242nd o func\310\233ie recursiv\304\203."
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; NU este permis\304\203 inversare"
 #"a listei sau aplicarea func\310\233iei de la punctul (6)."
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; Implementarea trebuie s\304\203 aib\304\203 o complexitate mai bu"
 #"n\304\203 de O(n^2)."
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Ce tip de recursivitate a\310\233i folosit pentru realizarea aces"
 #"tei func\310\233ii?"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; S-ar fi putut implementa func\310\233ia folosind cel\304\203lalt "
 #"tip de recursivitate?"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; recursivitate pe stiva"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-suffix"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"common-suffix-iter"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"common-suffix-iter"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #" "
0 0 14 3 10 #"suffixList"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 10 #"suffixList"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 18 #"common-suffix-iter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 10 #"suffixList"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 10 #"suffixList"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-suffix"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-suffix"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 13 #"common-suffix"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 783
(
 #"(#(struct:translate 16.77050983124842 46.1652530576288 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15"
 #" 0 0 0) #(struct:pulled-point 0 0 27.135254915624213 -8.816778784387"
 #"097 0 0) #(struct:pulled-point 0 0 31.770509831248425 -23.0826265288"
 #"144 0 0) #(struct:pulled-point 0 0 27.135254915624216 -37.3484742732"
 #"41706 0 0) #(struct:pulled-point 0 0 15.000000000000005 -46.16525305"
 #"76288 0 0) #(struct:pulled-point 0 0 5.329070518200751e-15 -46.16525"
 #"30576288 0 0) #(struct:pulled-point 0 0 -12.135254915624207 -37.3484"
 #"74273241706 0 0) #(struct:pulled-point 0 0 -16.77050983124842 -23.08"
 #"26265288144 0 0) #(struct:pulled-point 0 0 -12.135254915624213 -8.81"
 #"6778784387097 0 0)) 255 \"violet\")) #(struct:bb 48.54101966249685 4"
 #"6.1652530576288 46.1652530576288) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 648
(
 #"(#(struct:translate 17.677669529663692 60.35533905932738 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"25 0 0 0) #(struct:pulled-point 0 0 42.67766952966369 -17.6776695296"
 #"63685 0 0) #(struct:pulled-point 0 0 42.67766952966369 -42.677669529"
 #"66369 0 0) #(struct:pulled-point 0 0 25.000000000000004 -60.35533905"
 #"932738 0 0) #(struct:pulled-point 0 0 3.552713678800501e-15 -60.3553"
 #"3905932738 0 0) #(struct:pulled-point 0 0 -17.67766952966369 -42.677"
 #"66952966369 0 0) #(struct:pulled-point 0 0 -17.677669529663692 -17.6"
 #"7766952966369 0 0)) 255 \"green\")) #(struct:bb 60.35533905932738 60"
 #".35533905932738 60.35533905932738) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 392
(
 #"(#(struct:translate 14.999999999999993 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 14.9999999999"
 #"99996 25.98076211353316 0 0) #(struct:pulled-point 0 0 3.55271367880"
 #"0501e-15 51.96152422706632 0 0) #(struct:pulled-point 0 0 -14.999999"
 #"999999993 25.98076211353316 0 0)) 255 \"magenta\")) #(struct:bb 29.9"
 #"9999999999999 51.96152422706632 51.96152422706632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 759
(
 #"(#(struct:translate 22.360679774997905 61.55367074350507 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339887"
 #"49896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339887"
 #"498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 -30"
 #".776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(struct"
 #":pulled-point 0 0 -16.180339887498"
 #"953 -49.79796569765561 0 0)) 255 \"purple\")) #(struct:bb 64.7213595"
 #"499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 225
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 270
(
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255"
 #" \"red\")) #(struct:bb 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 348
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 14.999999999999993 -0.0"
 #" 0 0) #(struct:pulled-point 0 0 29.99999999999999 25.98076211353316 "
 #"0 0) #(struct:pulled-point 0 0 14.999999999999996 51.96152422706632 "
 #"0 0) #(struct:pulled-point 0 0 0.0 25.98076211353316 0 0)) 255 \"mag"
 #"enta\") #(struct:bb 29.99999999999999 51.96152422706632 51.961524227"
 #"06632) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 735
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 22.360679774997905 61.5"
 #"5367074350507 0 0) #(struct:pulled-point 0 0 64.7213595499958 30.776"
 #"83537175254 0 0) #(struct:pulled-point 0 0 22.360679774997905 0.0 0 "
 #"0) #(struct:pulled-point 0 0 6.1803398874989455 49.7979656976556 0 0"
 #") #(struct:pulled-point 0 0 58.54101966249685 49.79796569765561 0 0)"
 #" #(struct:pulled-point 0 0 42.360679774997905 0.0 0 0) #(struct:pull"
 #"ed-point 0 0 0.0 30.77683537175253 0 0) #(struct:pulled-point 0 0 42"
 #".360679774997905 61.55367074350507 0 0) #(struct:pulled-point 0 0 58"
 #".54101966249685 11.755705045849467 0 0) #(struct:pulled-point 0 0 6."
 #"180339887498953 11.75570504584946 0 0)) 255 \"purple\") #(struct:bb "
 #"64.7213595499958 61.55367074350507 61.55367074350507) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 201
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:"
 #"pulled-point 0 0 0 50 0 0)) 255 \"blue\") #(struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 249
(
 #"(#(struct:polygon (#(struct:pulled-point 0 0 -0.0 43.30127018922194 "
 #"0 0) #(struct:pulled-point 0 0 50.0 43.30127018922194 0 0) #(struct:"
 #"pulled-point 0 0 25.00000000000001 0.0 0 0)) 255 \"red\") #(struct:b"
 #"b 50.0 43.30127018922194 43.30127018922194) #f)"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Pornind de la o list\304\203 de imagini, \310\231i de la o imagin"
 #"e ini\310\233ial\304\203, construi\310\233i"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; o unic\304\203 imagine, rezultat\304\203 prin suprapunerea tuturo"
 #"r imaginilor, \303\256n maniera"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; urm\304\203toare:"
0 0 24 29 1 #"\n"
0 0 17 3 57
(
 #";; * prima imagine din list\304\203 deasupra imaginii ini\310\233ial"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 17 3 52
#";; * a doua imagine din list\304\203 deasupra rezultatului"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; ..."
0 0 24 29 1 #"\n"
0 0 17 3 53
#";; * ultima imagine din list\304\203 deasupra rezultatului."
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Numele func\310\233iei este 'overlay->', pentru a indica sensul d"
 #"e parcurgere"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; de la st\303\242nga la dreapta."
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Care este tipul natural de recursivitate pentru aceast\304\203 fu"
 #"nc\310\233ie?"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
(
 #";; Utiliza\310\233i func\310\233ia predefinit\304\203 (overlay <deas"
 #"upra> <dedesubt>)."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; recursivitate pe coada"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"overlay->"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"initial"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"overlay->"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 7 #"initial"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"check-exp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"overlay->"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 0 14 3 12 #"BONUS-IMAGES"
0 0 24 3 2 #") "
0 6           4 21 5554
(
 #"(#(struct:overlay #(struct:translate 42.6393202250021 44.22316462824"
 #"746 #(struct:translate 22.360679774997905 61.55367074350507 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 42.36067977499789 -30.776835371752533 0 0) #(struct:pulled-point "
 #"0 0 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -16.180339"
 #"88749896 -11.75570504584947 0 0) #(struct:pulled-point 0 0 36.180339"
 #"887498945 -11.755705045849464 0 0) #(struct:pulled-point 0 0 20.0 -6"
 #"1.55367074350507 0 0) #(struct:pulled-point 0 0 -22.360679774997905 "
 #"-30.776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struc"
 #"t:pulled-point 0 0 36.180339887498945 -49.797965697655606 0 0) #(str"
 #"uct:pulled-point 0 0 -16.180339887498953 -49.79796569765561 0 0)) 25"
 #"5 \"purple\"))) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 50.0 50.0 #(struct:translate 25 25 #(struct:ellipse 50 50 0 2"
 #"55 \"blue\"))) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 44.82233047033631 44.82233047033631 #(struct:translate 17.6776"
 #"69529663692 60.35533905932738 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 25 0 0 0) #(struct:pulled-p"
 #"oint 0 0 42.67766952966369 -17.677669529663685 0 0) #(struct:pulled-"
 #"point 0 0 42.67766952966369 -42.67766952966369 0 0) #(struct:pulled-"
 #"point 0 0 25.000000000000004 -60.35533905932738 0 0) #(struct:pulled"
 #"-point 0 0 3.552713678800501e-15 -60.35533905932738 0 0) #(struct:pu"
 #"lled-point 0 0 -17.67766952966369 -42.67766952966369 0 0) #(struct:p"
 #"ulled-point 0 0 -17.677669529663692 -17.67766952966369 0 0)) 255 \"g"
 #"reen\"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 42.6393202250021 44.22316462824747 #(struct:translate 12.3606797749"
 #"97898 61.553670743505066 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 52.3606797749979 -38.04226065180"
 #"614 0 0) #(struct:pulled-point 0 0 -12.360679774997898 -38.042260651"
 #"806146 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 20.000000000000007 -61.553670743505066 0 0)) 255 \"orange\")))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 50.0 50."
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point "
 #"0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 50.0 53.3"
 #"4936490538903 #(struct:translate -0.0 43.30127018922194 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 5"
 #"0 0 0 0) #(struct:pulled-point 0 0 25.00000000000001 -43.30127018922"
 #"194 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 50.0 50.0 #(struct:translate 25 25 #(struct:ellipse "
 #"50 50 0 255 \"yellow\"))) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 60.0 0 #(struct:translate 0 150.0 #(struct:translat"
 #"e 15 -75 #(struct:ellipse 30 150 0 255 #(struct:color 0 0 255 64))))"
 #") #(struct:translate 0 1.0935045065594124 #(struct:overlay #(struct:"
 #"translate 55.30660202306246 0 #(struct:translate -8.102331643265362 "
 #"145.16235430435222 #(struct:translate 27.795729620202902 -71.2558588"
 #"1091163 #(struct:ellipse 150 30 80 255 #(struct:color 0 0 255 57))))"
 #") #(struct:translate 0 3.243067920039948 #(struct:overlay #(struct:t"
 #"ranslate 45.73090360843438 0 #(struct:translate -10.477803669648168 "
 #"136.01007198245873 #(struct:translate 39.746900061213786 -65.3466444"
 #"0905809 #(struct:ellipse 150 30 70 255 #(struct:color 0 0 255 50))))"
 #") #(struct:translate 0 5.279943420290536 #(struct:overlay #(struct:t"
 #"ranslate 35.313730334031135 0 #(struct:translate -10.804111390797722"
 #" 122.835389436943 #(struct:translate 50.49038105676659 -57.451905283"
 #"8329 #(struct:ellipse 150 30 60 255 #(struct:color 0 0 255 42))))) #"
 #"(struct:translate 0 7.12672420457956 #(struct:overlay #(struct:trans"
 #"late 25.44044067690585 0 #(struct:translate -10.140178050180971 106."
 #"0682790371558 #(struct:translate 59.69973737327512 -47.8115190886252"
 #"6 #(struct:ellipse 150 30 50 255 #(struct:color 0 0 255 35))))) #(st"
 #"ruct:translate 0 8.697200625436409 #(struct:overlay #(struct:transla"
 #"te 16.74324005146947 0 #(struct:translate -8.838387430690908 86.2779"
 #"6340279991 #(struct:translate 67.09514737922144 -36.71840407970578 #"
 #"(struct:ellipse 150 30 40 255 #(struct:color 0 0 255 28))))) #(struc"
 #"t:translate 0 9.873289657125284 #(struct:overlay #(struct:translate "
 #"9.61651584688991 0 #(struct:translate -7.068421130722797 64.19588860"
 #"920226 #(struct:translate 72.4519052838329 -24.509618943233413 #(str"
 #"uct:ellipse 150 30 30 255 #(struct:color 0 0 255 21))))) #(struct:tr"
 #"anslate 0 10.41717327440324 #(struct:overlay #(struct:translate 4.33"
 #"6572426599346 0 #(struct:translate -4.943821135427498 40.82521782920"
 #"214 #(struct:translate 75.60724870882815 -11.556121437636527 #(struc"
 #"t:ellipse 150 30 20 255 #(struct:color 0 0 255 14))))) #(struct:tran"
 #"slate 0 9.575698414628079 #(struct:overlay #(struct:translate 1.0935"
 #"045065594409 0 #(struct:translate -2.5588086474789833 17.94489500677"
 #"419 #(struct:translate 76.46530414091956 1.7485029701633454 #(struct"
 #":ellipse 150 30 10 255 #(struct:color 0 0 255 10))))) #(struct:trans"
 #"late 0 4.693397976937533 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 -0.0 #(struct:translate 75 15 #(struct:ellipse 150"
 #" 30 0 255 #(struct:color 0 0 255 10))))) #(struct:translate 75 15.0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"black\")))))))))"
 #"))))))))))))))))))))))))))) #(struct:bb 150.0 150.0 150.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; La fel ca la punctul (8), dar parcurgerea listei va avea loc"
0 0 24 29 1 #"\n"
0 0 17 3 52
(
 #";; de la dreapta la st\303\242nga, \303\256n maniera urm\304\203toar"
 #"e:"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
(
 #";; * ultima imagine din list\304\203 deasupra imaginii ini\310\233ia"
 #"le"
) 0 0 24 29 1 #"\n"
0 0 17 3 55
#";; * penultima imagine din list\304\203 deasupra rezultatului"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; ..."
0 0 24 29 1 #"\n"
0 0 17 3 52
#";; * prima imagine din list\304\203 deasupra rezultatului."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";; Se va realiza o implementa"
 #"re eficient\304\203 care acceseaz\304\203 doar"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";; primul"
0 0 17 3 1 #" "
0 0 17 3 7 #"element"
0 0 17 3 1 #" "
0 0 17 3 7 #"dintr-o"
0 0 17 3 1 #" "
0 0 17 3 6 #"list\304\203"
0 0 17 3 1 #","
0 0 17 3 32 #" adaug\304\203 \303\256ntr-o list\304\203 numai la"
0 0 24 29 1 #"\n"
0 0 17 3 40
#";; \303\256nceput, \310\231i NU utilizeaz\304\203 reverse."
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Care este tipul natural de recursivitate pentru aceast\304\203 fu"
 #"nc\310\233ie?"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; recursivitate pe stiva"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"overlay<-"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"initial"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #") ("
0 0 14 3 9 #"overlay<-"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"check-exp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"overlay<-"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 0 14 3 12 #"BONUS-IMAGES"
0 0 24 3 2 #") "
0 6           4 21 5554
(
 #"(#(struct:overlay #(struct:translate 50.0 50.0 #(struct:translate 25"
 #" 25 #(struct:ellipse 50 50 0 255 \"yellow\"))) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 50.0 53.34936490538903 #(struc"
 #"t:translate -0.0 43.30127018922194 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pul"
 #"led-point 0 0 25.00000000000001 -43.30127018922194 0 0)) 255 \"red\""
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 50.0 "
 #"50.0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"blue\")"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 42.639"
 #"3202250021 44.22316462824747 #(struct:translate 12.360679774997898 6"
 #"1.553670743505066 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 52.3606797749979 -38.04226065180614 0 0"
 #") #(struct:pulled-point 0 0 -12.360679774997898 -38.042260651806146 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 2"
 #"0.000000000000007 -61.553670743505066 0 0)) 255 \"orange\"))) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 44.822330470336"
 #"31 44.82233047033631 #(struct:translate 17.677669529663692 60.355339"
 #"05932738 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 25 0 0 0) #(struct:pulled-point 0 0 42.677669529"
 #"66369 -17.677669529663685 0 0) #(struct:pulled-point 0 0 42.67766952"
 #"966369 -42.67766952966369 0 0) #(struct:pulled-point 0 0 25.00000000"
 #"0000004 -60.35533905932738 0 0) #(struct:pulled-point 0 0 3.55271367"
 #"8800501e-15 -60.35533905932738 0 0) #(struct:pulled-point 0 0 -17.67"
 #"766952966369 -42.67766952966369 0 0) #(struct:pulled-point 0 0 -17.6"
 #"77669529663692 -17.67766952966369 0 0)) 255 \"green\"))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 50.0 50.0 #(struct:t"
 #"ranslate 25 25 #(struct:ellipse 50 50 0 255 \"blue\"))) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 42.6393202250021 44.2"
 #"2316462824746 #(struct:translate 22.360679774997905 61.5536707435050"
 #"7 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 42.36067977499789 -30.776835371752533 0 0) #(struct:pul"
 #"led-point 0 0 0.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 "
 #"-16.18033988749896 -11.75570504584947 0 0) #(struct:pulled-point 0 0"
 #" 36.180339887498945 -11.755705045849464 0 0) #(struct:pulled-point 0"
 #" 0 20.0 -61.55367074350507 0 0) #(struct:pulled-point 0 0 -22.360679"
 #"774997905 -30.776835371752544 0 0) #(struct:pulled-point 0 0 20 0 0 "
 #"0) #(struct:pulled-point 0 0 36.180339887498945 -49.797965697655606 "
 #"0 0) #(struct:pulled-point 0 0 -16.180339887498953 -49.7979656976556"
 #"1 0 0)) 255 \"purple\"))) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 60.0 0 #(struct:translate 0 150.0 #(struct:translat"
 #"e 15 -75 #(struct:ellipse 30 150 0 255 #(struct:color 0 0 255 64))))"
 #") #(struct:translate 0 1.0935045065594124 #(struct:overlay #(struct:"
 #"translate 55.30660202306246 0 #(struct:translate -8.102331643265362 "
 #"145.16235430435222 #(struct:translate 27.795729620202902 -71.2558588"
 #"1091163 #(struct:ellipse 150 30 80 255 #(struct:color 0 0 255 57))))"
 #") #(struct:translate 0 3.243067920039948 #(struct:overlay #(struct:t"
 #"ranslate 45.73090360843438 0 #(struct:translate -10.477803669648168 "
 #"136.01007198245873 #(struct:translate 39.746900061213786 -65.3466444"
 #"0905809 #(struct:ellipse 150 30 70 255 #(struct:color 0 0 255 50))))"
 #") #(struct:translate 0 5.279943420290536 #(struct:overlay #(struct:t"
 #"ranslate 35.313730334031135 0 #(struct:translate -10.804111390797722"
 #" 122.835389436943 #(struct:translate 50.49038105676659 -57.451905283"
 #"8329 #(struct:ellipse 150 30 60 255 #(struct:color 0 0 255 42))))) #"
 #"(struct:translate 0 7.12672420457956 #(struct:overlay #(struct:trans"
 #"late 25.44044067690585 0 #(struct:translate -10.140178050180971 106."
 #"0682790371558 #(struct:translate 59.69973737327512 -47.8115190886252"
 #"6 #(struct:ellipse 150 30 50 255 #(struct:color 0 0 255 35))))) #(st"
 #"ruct:translate 0 8.697200625436409 #(struct:overlay #(struct:transla"
 #"te 16.74324005146947 0 #(struct:translate -8.838387430690908 86.2779"
 #"6340279991 #(struct:translate 67.09514737922144 -36.71840407970578 #"
 #"(struct:ellipse 150 30 40 255 #(struct:color 0 0 255 28))))) #(struc"
 #"t:translate 0 9.873289657125284 #(struct:overlay #(struct:translate "
 #"9.61651584688991 0 #(struct:translate -7.068421130722797 64.19588860"
 #"920226 #(struct:translate 72.4519052838329 -24.509618943233413 #(str"
 #"uct:ellipse 150 30 30 255 #(struct:color 0 0 255 21))))) #(struct:tr"
 #"anslate 0 10.41717327440324 #(struct:overlay #(struct:translate 4.33"
 #"6572426599346 0 #(struct:translate -4.943821135427498 40.82521782920"
 #"214 #(struct:translate 75.60724870882815 -11.556121437636527 #(struc"
 #"t:ellipse 150 30 20 255 #(struct:color 0 0 255 14))))) #(struct:tran"
 #"slate 0 9.575698414628079 #(struct:overlay #(struct:translate 1.0935"
 #"045065594409 0 #(struct:translate -2.5588086474789833 17.94489500677"
 #"419 #(struct:translate 76.46530414091956 1.7485029701633454 #(struct"
 #":ellipse 150 30 10 255 #(struct:color 0 0 255 10))))) #(struct:trans"
 #"late 0 4.693397976937533 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 -0.0 #(struct:translate 75 15 #(struct:ellipse 150"
 #" 30 0 255 #(struct:color 0 0 255 10))))) #(struct:translate 75 15.0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"black\")))))))))"
 #"))))))))))))))))))))))))))) #(struct:bb 150.0 150.0 150.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 67
(
 #";; Se d\304\203 o list\304\203 de imagini, care poate con\310\233ine"
 #" duplicate, \310\231i o"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
(
 #";; imagine ini\310\233iala. Pornind de la acestea, construi\310\233i"
 #" o unic\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
(
 #";; imagine, rezultat\304\203 prin suprapunerea primei apari\310\233i"
 #"i a unei"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";; imagini \303\256n lista dat\304\203, astfel:"
0 0 24 29 1 #"\n"
0 0 17 3 62
(
 #";; - scalare cu 1.2 dac\304\203"
 #" \303\256n\304\203l\310\233imea imaginii este mai mic\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";; sau egal\304\203 dec\303\242t a tuturor imaginilor precedente din"
 #" list\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";; hint: (scale n image)"
0 0 24 29 1 #"\n"
0 0 17 3 59
(
 #";; - flip-vertical daca \303\256n\304\203l\310\233imea imaginii este"
 #" mai mare"
) 0 0 24 29 1 #"\n"
0 0 17 3 54
#";; dec\303\242t a tuturor imaginilor precedente din list\304\203. "
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; hint: (flip-vertical image)"
0 0 24 29 1 #"\n"
0 0 17 3 53
(
 #";; - altfel, imaginea nu s"
 #"e adaug\304\203 la cea ini\310\233ial\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Cu alte cuvinte, imaginea final\304\203 se va realiza \303\256n m"
 #"aniera urm\304\203toare:"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #";; * pentru prima imagine din list\304\203 nu se aplic\304\203 nicio"
 #" opera\310\233ie"
) 0 0 24 29 1 #"\n"
0 0 17 3 46
#";; \310\231i se adaug\304\203 deasupra imaginii ini\310\233iale;"
0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #";; * pentru urm\304\203toarea imagine, diferit\304\203 de prima, se "
 #"determin\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";; dac\304\203 \303\256n\304\203l\310\233imea ei "
 #"este mai mic\304\203 sau egal\304\203 decat a imaginilor precedente "
 #"din list\304\203,"
) 0 0 24 29 1 #"\n"
0 0 17 3 44
#";; \303\256n acest caz se scaleaz\304\203 corespunz\304\203tor"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; sau"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; dac\304\203 \303\256nal\310\233imea ei e"
 #"ste mai mare dec\303\242t a imaginilor precedente din list\304\203,"
) 0 0 24 29 1 #"\n"
0 0 17 3 53
#";; \303\256n acest caz se aplica opera\310\233ia de flip-vertical"
0 0 24 29 1 #"\n"
0 0 17 3 48
#";; \310\231i se adaug\304\203 deasupra rezultatului anterior"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; altfel, se ignora imaginea;"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; ..."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"nice-overlay"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"nice-overlay2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 7 #"initial"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-duplicates-left"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"nice-overlay2"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #" "
0 0 14 3 4 #"maxH"
0 0 24 3 1 #" "
0 0 14 3 4 #"minH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"initial"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 4 #"minH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";; scalare 1.2"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 4 #"minH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"nice-overlay2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.2"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 7 #"initial"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 4 #"maxH"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"nice-overlay2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.2"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 7 #"initial"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 4 #"maxH"
0 0 24 3 1 #" "
0 0 14 3 4 #"minH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 4 #"maxH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 15 #";;flip-vertical"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"nice-overlay2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 13 #"flip-vertical"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 7 #"initial"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #") ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 3 #")) "
0 0 14 3 4 #"minH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"nice-overlay2"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"images"
0 0 24 3 2 #") "
0 0 14 3 4 #"maxH"
0 0 24 3 1 #" "
0 0 14 3 4 #"minH"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"nice-overlay"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"cyan\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"yellow\")) "
 #"#(struct:bb 20 20 20) #f)"
) 0 0 24 3 2 #"  "
0 6           4 21 438
(
 #"(#(struct:translate 2.4721359549995796 12.310734148701014 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10.47213595499958 -7.608452130361228 0 0) #(struct:pulled-point 0 0"
 #" -2.4721359549995796 -7.60845213036123 0 0) #(struct:pulled-point 0 "
 #"0 8 0 0 0) #(struct:pulled-point 0 0 4.000000000000001 -12.310734148"
 #"701014 0 0)) 255 \"blue\")) #(struct:bb 12.94427190999916 12.3107341"
 #"48701014 12.310734148701014) #f)"
) 0 0 24 3 2 #"  "
0 6           4 21 427
(
 #"(#(struct:translate 8.034441853748636 40.009885983278295 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"34.03444185374863 -24.72746942367399 0 0) #(struct:pulled-point 0 0 "
 #"-8.034441853748636 -24.727469423673995 0 0) #(struct:pulled-point 0 "
 #"0 26 0 0 0) #(struct:pulled-point 0 0 13.0 -40.009885983278295 0 0))"
 #" 255 \"cyan\")) #(struct:bb 42.068883707497264 40.009885983278295 40"
 #".009885983278295) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 443
(
 #"(#(struct:translate 4.3262379212492625 21.543784760226774 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 18.326237921249266 -13.31479122813215 0 0) #(struct:pulled-point 0 "
 #"0 -4.3262379212492625 -13.314791228132153 0 0) #(struct:pulled-point"
 #" 0 0 14 0 0 0) #(struct:pulled-point 0 0 7.0000000000000036 -21.5437"
 #"84760226774 0 0)) 255 \"pink\")) #(struct:bb 22.65247584249853 21.54"
 #"3784760226774 21.543784760226774) #f)"
) 0 6           4 21 439
(
 #"(#(struct:translate 6.798373876248842 33.85451890892779 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2"
 #"8.798373876248846 -20.923243358493377 0 0) #(struct:pulled-point 0 0"
 #" -6.798373876248842 -20.92324335849338 0 0) #(struct:pulled-point 0 "
 #"0 22 0 0 0) #(struct:pulled-point 0 0 11.000000000000004 -33.8545189"
 #"0892779 0 0)) 255 \"orange\")) #(struct:bb 35.59674775249769 33.8545"
 #"1890892779 33.85451890892779) #f)"
) 0 6           4 21 438
(
 #"(#(struct:translate 9.888543819998318 49.24293659480406 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"1.88854381999832 -30.433808521444913 0 0) #(struct:pulled-point 0 0 "
 #"-9.888543819998318 -30.43380852144492 0 0) #(struct:pulled-point 0 0"
 #" 32 0 0 0) #(struct:pulled-point 0 0 16.000000000000004 -49.24293659"
 #"480406 0 0)) 255 \"violet\")) #(struct:bb 51.77708763999664 49.24293"
 #"659480406 49.24293659480406) #f)"
) 0 0 24 3 2 #"  "
0 6           4 21 441
(
 #"(#(struct:translate 5.253288904374108 26.160310065989655 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"22.253288904374106 -16.16796077701761 0 0) #(struct:pulled-point 0 0"
 #" -5.253288904374108 -16.167960777017612 0 0) #(struct:pulled-point 0"
 #" 0 17 0 0 0) #(struct:pulled-point 0 0 8.500000000000002 -26.1603100"
 #"65989655 0 0)) 255 \"green\")) #(struct:bb 27.50657780874821 26.1603"
 #"10065989655 26.160310065989655) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 443
(
 #"(#(struct:translate 3.399186938124421 16.927259454463893 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"14.399186938124423 -10.461621679246688 0 0) #(struct:pulled-point 0 "
 #"0 -3.399186938124421 -10.46162167924669 0 0) #(struct:pulled-point 0"
 #" 0 11 0 0 0) #(struct:pulled-point 0 0 5.500000000000002 -16.9272594"
 #"54463893 0 0)) 255 \"yellow\")) #(struct:bb 17.798373876248846 16.92"
 #"7259454463893 16.927259454463893) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 438
(
 #"(#(struct:translate 2.4721359549995796 12.310734148701014 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10.47213595499958 -7.608452130361228 0 0) #(struct:pulled-point 0 0"
 #" -2.4721359549995796 -7.60845213036123 0 0) #(struct:pulled-point 0 "
 #"0 8 0 0 0) #(struct:pulled-point 0 0 4.000000000000001 -12.310734148"
 #"701014 0 0)) 255 \"blue\")) #(struct:bb 12.94427190999916 12.3107341"
 #"48701014 12.310734148701014) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 429
(
 #"(#(struct:translate 1.8541019662496847 9.23305061152576 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 7"
 #".854101966249685 -5.706339097770921 0 0) #(struct:pulled-point 0 0 -"
 #"1.8541019662496847 -5.706339097770922 0 0) #(struct:pulled-point 0 0"
 #" 6 0 0 0) #(struct:pulled-point 0 0 3.000000000000001 -9.23305061152"
 #"576 0 0)) 255 \"red\")) #(struct:bb 9.70820393249937 9.2330506115257"
 #"6 9.23305061152576) #f)"
) 0 0 24 3 4 #" )) "
0 6           4 21 2291
(
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:polygon"
 #" (#(struct:pulled-point 0 0 71.39999999999999 80.53983036691545 0 0)"
 #" #(struct:pulled-point 0 0 80.82492235949961 73.69222344959034 0 0) "
 #"#(struct:pulled-point 0 0 69.17507764050038 73.69222344959034 0 0) #"
 #"(struct:pulled-point 0 0 78.6 80.53983036691545 0 0) #(struct:pulled"
 #"-point 0 0 74.99999999999999 69.46016963308455 0 0)) 255 \"red\") #("
 #"struct:polygon (#(struct:pulled-point 0 0 70.2 82.38644048922062 0 0"
 #") #(struct:pulled-point 0 0 82.7665631459995 73.25629793278713 0 0) "
 #"#(struct:pulled-point 0 0 67.2334368540005 73.25629793278713 0 0) #("
 #"struct:pulled-point 0 0 79.8 82.38644048922062 0 0) #(struct:pulled-"
 #"point 0 0 75.0 67.6135595107794 0 0)) 255 \"blue\")) #(struct:transl"
 #"ate 75.0 75.0 #(struct:ellipse 24.0 24.0 0 255 \"yellow\"))) #(struc"
 #"t:translate 75.0 75.0 #(struct:ellipse 40.8 40.8 0 255 \"red\"))) #("
 #"struct:translate 75.0 75.0 #(struct:ellipse 50 50 0 255 \"cyan\"))) "
 #"#(struct:translate 75.0 75.0 #(struct:ellipse 30 150 0 255 #(struct:"
 #"color 0 0 255 64)))) #(struct:translate 75.0 75.0 #(struct:ellipse 1"
 #"50 30 80 255 #(struct:color 0 0 255 57)))) #(struct:translate 75.0 7"
 #"5.0 #(struct:ellipse 150 30 70 255 #(struct:color 0 0 255 50)))) #(s"
 #"truct:translate 75.0 75.0 #(struct:ellipse 150 30 60 255 #(struct:co"
 #"lor 0 0 255 42)))) #(struct:translate 75.0 75.0 #(struct:ellipse 150"
 #" 30 50 255 #(struct:color 0 0 255 35)))) #(struct:translate 75.0 75."
 #"0 #(struct:ellipse 150 30 40 255 #(struct:color 0 0 255 28)))) #(str"
 #"uct:translate 75.00000000000001 75.0 #(struct:ellipse 150 30 30 255 "
 #"#(struct:color 0 0 255 21)))) #(struct:translate 75.0 75.0 #(struct:"
 #"ellipse 150 30 20 255 #(struct:color 0 0 255 14)))) #(struct:transla"
 #"te 75.00000000000001 75.0 #(struct:ellipse 150 30 10 255 #(struct:co"
 #"lor 0 0 255 10)))) #(struct:translate 75 75.0 #(struct:ellipse 150 3"
 #"0 0 255 #(struct:color 0 0 255 10)))) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 75 75.0 0 0) #(struct:pulled-point 0 0 75 75.0 0 0) #("
 #"struct:pulled-point 0 0 75 75.0 0 0) #(struct:pulled-point 0 0 75 75"
 #".0 0 0)) 255 \"black\")) #(struct:bb 150.0 150.0 150.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"nice-overlay"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"( "
0 6           4 21 89
(
 #"(#(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"cyan\")) #("
 #"struct:bb 50 50 50) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 438
(
 #"(#(struct:translate 9.888543819998318 49.24293659480406 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"1.88854381999832 -30.433808521444913 0 0) #(struct:pulled-point 0 0 "
 #"-9.888543819998318 -30.43380852144492 0 0) #(struct:pulled-point 0 0"
 #" 32 0 0 0) #(struct:pulled-point 0 0 16.000000000000004 -49.24293659"
 #"480406 0 0)) 255 \"violet\")) #(struct:bb 51.77708763999664 49.24293"
 #"659480406 49.24293659480406) #f)"
) 0 6           4 21 90
(
 #"(#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"green\")) #"
 #"(struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"yellow\")) "
 #"#(struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 439
(
 #"(#(struct:translate 6.798373876248842 33.85451890892779 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2"
 #"8.798373876248846 -20.923243358493377 0 0) #(struct:pulled-point 0 0"
 #" -6.798373876248842 -20.92324335849338 0 0) #(struct:pulled-point 0 "
 #"0 22 0 0 0) #(struct:pulled-point 0 0 11.000000000000004 -33.8545189"
 #"0892779 0 0)) 255 \"orange\")) #(struct:bb 35.59674775249769 33.8545"
 #"1890892779 33.85451890892779) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 87
(
 #"(#(struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"blue\")) #(st"
 #"ruct:bb 10 10 10) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 15 15 #(struct:ellipse 30 30 0 255 \"pink\")) #("
 #"struct:bb 30 30 30) #f)"
) 0 0 24 3 2 #"  "
0 6           4 21 91
(
 #"(#(struct:translate 22 22 #(struct:ellipse 44 44 0 255 \"yellow\")) "
 #"#(struct:bb 44 44 44) #f)"
) 0 0 24 3 4 #" )) "
0 6           4 21 2120
(
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:translate 75.0 75.0 #(struct:ellipse 12.0 12.0 0 255 \"blu"
 #"e\")) #(struct:translate 75.0 75.0 #(struct:ellipse 24.0 24.0 0 255 "
 #"\"yellow\"))) #(struct:translate 75.0 75.0 #(struct:ellipse 40.8 40."
 #"8 0 255 \"red\"))) #(struct:translate 75.0 75.0 #(struct:ellipse 48."
 #"0 48.0 0 255 \"green\"))) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 55.800000000000004 104.54576195688244 0 0) #(struct:pulled-point 0"
 #" 0 106.066252583998 68.02519173114855 0 0) #(struct:pulled-point 0 0"
 #" 43.93374741600202 68.02519173114854 0 0) #(struct:pulled-point 0 0 "
 #"94.2 104.54576195688244 0 0) #(struct:pulled-point 0 0 75.0 45.45423"
 #"804311758 0 0)) 255 \"violet\")) #(struct:translate 75.0 75.0 #(stru"
 #"ct:ellipse 50 50 0 255 \"cyan\"))) #(struct:translate 75.0 75.0 #(st"
 #"ruct:ellipse 30 150 0 255 #(struct:color 0 0 255 64)))) #(struct:tra"
 #"nslate 75.0 75.0 #(struct:ellipse 150 30 80 255 #(struct:color 0 0 2"
 #"55 57)))) #(struct:translate 75.0 75.0 #(struct:ellipse 150 30 70 25"
 #"5 #(struct:color 0 0 255 50)))) #(struct:translate 75.0 75.0 #(struc"
 #"t:ellipse 150 30 60 255 #(struct:color 0 0 255 42)))) #(struct:trans"
 #"late 75.0 75.0 #(struct:ellipse 150 30 50 255 #(struct:color 0 0 255"
 #" 35)))) #(struct:translate 75.0 75.0 #(struct:ellipse 150 30 40 255 "
 #"#(struct:color 0 0 255 28)))) #(struct:translate 75.00000000000001 7"
 #"5.0 #(struct:ellipse 150 30 30 255 #(struct:color 0 0 255 21)))) #(s"
 #"truct:translate 75.0 75.0 #(struct:ellipse 150 30 20 255 #(struct:co"
 #"lor 0 0 255 14)))) #(struct:translate 75.00000000000001 75.0 #(struc"
 #"t:ellipse 150 30 10 255 #(struct:color 0 0 255 10)))) #(struct:trans"
 #"late 75 75.0 #(struct:ellipse 150 30 0 255 #(struct:color 0 0 255 10"
 #")))) #(struct:polygon (#(struct:pulled-point 0 0 75 75.0 0 0) #(stru"
 #"ct:pulled-point 0 0 75 75.0 0 0) #(struct:pulled-point 0 0 75 75.0 0"
 #" 0) #(struct:pulled-point 0 0 75 75.0 0 0)) 255 \"black\")) #(struct"
 #":bb 150.0 150.0 150.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"nice-overlay"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 6           4 21 438
(
 #"(#(struct:translate 9.579526825623368 47.70409482621643 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"0.579526825623375 -29.48275200514976 0 0) #(struct:pulled-point 0 0 "
 #"-9.579526825623368 -29.48275200514977 0 0) #(struct:pulled-point 0 0"
 #" 31 0 0 0) #(struct:pulled-point 0 0 15.500000000000007 -47.70409482"
 #"621643 0 0)) 255 \"green\")) #(struct:bb 50.159053651246744 47.70409"
 #"482621643 47.70409482621643) #f)"
) 0 0 24 3 2 #"  "
0 6           4 21 439
(
 #"(#(struct:translate 9.579526825623368 47.70409482621643 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"0.579526825623375 -29.48275200514976 0 0) #(struct:pulled-point 0 0 "
 #"-9.579526825623368 -29.48275200514977 0 0) #(struct:pulled-point 0 0"
 #" 31 0 0 0) #(struct:pulled-point 0 0 15.500000000000007 -47.70409482"
 #"621643 0 0)) 255 \"purple\")) #(struct:bb 50.159053651246744 47.7040"
 #"9482621643 47.70409482621643) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 427
(
 #"(#(struct:translate 8.034441853748636 40.009885983278295 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"34.03444185374863 -24.72746942367399 0 0) #(struct:pulled-point 0 0 "
 #"-8.034441853748636 -24.727469423673995 0 0) #(struct:pulled-point 0 "
 #"0 26 0 0 0) #(struct:pulled-point 0 0 13.0 -40.009885983278295 0 0))"
 #" 255 \"cyan\")) #(struct:bb 42.068883707497264 40.009885983278295 40"
 #".009885983278295) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 439
(
 #"(#(struct:translate 6.798373876248842 33.85451890892779 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2"
 #"8.798373876248846 -20.923243358493377 0 0) #(struct:pulled-point 0 0"
 #" -6.798373876248842 -20.92324335849338 0 0) #(struct:pulled-point 0 "
 #"0 22 0 0 0) #(struct:pulled-point 0 0 11.000000000000004 -33.8545189"
 #"0892779 0 0)) 255 \"orange\")) #(struct:bb 35.59674775249769 33.8545"
 #"1890892779 33.85451890892779) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 443
(
 #"(#(struct:translate 4.3262379212492625 21.543784760226774 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 18.326237921249266 -13.31479122813215 0 0) #(struct:pulled-point 0 "
 #"0 -4.3262379212492625 -13.314791228132153 0 0) #(struct:pulled-point"
 #" 0 0 14 0 0 0) #(struct:pulled-point 0 0 7.0000000000000036 -21.5437"
 #"84760226774 0 0)) 255 \"pink\")) #(struct:bb 22.65247584249853 21.54"
 #"3784760226774 21.543784760226774) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 439
(
 #"(#(struct:translate 9.579526825623368 47.70409482621643 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"0.579526825623375 -29.48275200514976 0 0) #(struct:pulled-point 0 0 "
 #"-9.579526825623368 -29.48275200514977 0 0) #(struct:pulled-point 0 0"
 #" 31 0 0 0) #(struct:pulled-point 0 0 15.500000000000007 -47.70409482"
 #"621643 0 0)) 255 \"purple\")) #(struct:bb 50.159053651246744 47.7040"
 #"9482621643 47.70409482621643) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 427
(
 #"(#(struct:translate 8.034441853748636 40.009885983278295 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"34.03444185374863 -24.72746942367399 0 0) #(struct:pulled-point 0 0 "
 #"-8.034441853748636 -24.727469423673995 0 0) #(struct:pulled-point 0 "
 #"0 26 0 0 0) #(struct:pulled-point 0 0 13.0 -40.009885983278295 0 0))"
 #" 255 \"cyan\")) #(struct:bb 42.068883707497264 40.009885983278295 40"
 #".009885983278295) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"yellow\")) "
 #"#(struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 438
(
 #"(#(struct:translate 2.4721359549995796 12.310734148701014 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10.47213595499958 -7.608452130361228 0 0) #(struct:pulled-point 0 0"
 #" -2.4721359549995796 -7.60845213036123 0 0) #(struct:pulled-point 0 "
 #"0 8 0 0 0) #(struct:pulled-point 0 0 4.000000000000001 -12.310734148"
 #"701014 0 0)) 255 \"blue\")) #(struct:bb 12.94427190999916 12.3107341"
 #"48701014 12.310734148701014) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 429
(
 #"(#(struct:translate 1.8541019662496847 9.23305061152576 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 7"
 #".854101966249685 -5.706339097770921 0 0) #(struct:pulled-point 0 0 -"
 #"1.8541019662496847 -5.706339097770922 0 0) #(struct:pulled-point 0 0"
 #" 6 0 0 0) #(struct:pulled-point 0 0 3.000000000000001 -9.23305061152"
 #"576 0 0)) 255 \"red\")) #(struct:bb 9.70820393249937 9.2330506115257"
 #"6 9.23305061152576) #f)"
) 0 0 24 3 3 #")) "
0 6           4 21 3996
(
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:polygon"
 #" (#(struct:pulled-point 0 0 71.39999999999999 80.53983036691545 0 0)"
 #" #(struct:pulled-point 0 0 80.82492235949961 73.69222344959034 0 0) "
 #"#(struct:pulled-point 0 0 69.17507764050038 73.69222344959034 0 0) #"
 #"(struct:pulled-point 0 0 78.6 80.53983036691545 0 0) #(struct:pulled"
 #"-point 0 0 74.99999999999999 69.46016963308455 0 0)) 255 \"red\") #("
 #"struct:polygon (#(struct:pulled-point 0 0 70.2 82.38644048922062 0 0"
 #") #(struct:pulled-point 0 0 82.7665631459995 73.25629793278715 0 0) "
 #"#(struct:pulled-point 0 0 67.2334368540005 73.25629793278713 0 0) #("
 #"struct:pulled-point 0 0 79.8 82.38644048922062 0 0) #(struct:pulled-"
 #"point 0 0 75.0 67.6135595107794 0 0)) 255 \"blue\")) #(struct:transl"
 #"ate 75.0 75.0 #(struct:ellipse 24.0 24.0 0 255 \"yellow\"))) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 66.6 87.92627085613606 0 0) #(s"
 #"truct:pulled-point 0 0 88.59148550549911 71.94852138237748 0 0) #(st"
 #"ruct:pulled-point 0 0 61.40851449450088 71.94852138237748 0 0) #(str"
 #"uct:pulled-point 0 0 83.39999999999999 87.92627085613606 0 0) #(stru"
 #"ct:pulled-point 0 0 75.0 62.07372914386393 0 0)) 255 \"pink\")) #(st"
 #"ruct:translate 75.0 75.0 #(struct:ellipse 40.8 40.8 0 255 \"red\")))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 61.8 95.31271134535666 "
 #"0 0) #(struct:pulled-point 0 0 96.35804865149862 70.20481931516461 0"
 #" 0) #(struct:pulled-point 0 0 53.64195134850139 70.2048193151646 0 0"
 #") #(struct:pulled-point 0 0 88.19999999999999 95.31271134535666 0 0)"
 #" #(struct:pulled-point 0 0 75.0 54.68728865464332 0 0)) 255 \"orange"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 59.400000000000006 "
 #"99.00593158996698 0 0) #(struct:pulled-point 0 0 100.24133022449837 "
 #"69.33296828155818 0 0) #(struct:pulled-point 0 0 49.758669775501644 "
 #"69.33296828155818 0 0) #(struct:pulled-point 0 0 90.6 99.00593158996"
 #"698 0 0) #(struct:pulled-point 0 0 75.0 50.99406841003302 0 0)) 255 "
 #"\"cyan\")) #(struct:polygon (#(struct:pulled-point 0 0 56.4 103.6224"
 #"5689572987 0 0) #(struct:pulled-point 0 0 105.09543219074806 68.2431"
 #"5448955015 0 0) #(struct:pulled-point 0 0 44.90456780925196 68.24315"
 #"448955014 0 0) #(struct:pulled-point 0 0 93.6 103.62245689572987 0 0"
 #") #(struct:pulled-point 0 0 75.0 46.377543104270146 0 0)) 255 \"purp"
 #"le\")) #(struct:polygon (#(struct:pulled-point 0 0 59.49999999999999"
 #" 98.85204741310821 0 0) #(struct:pulled-point 0 0 100.07952682562336"
 #" 69.36929540795846 0 0) #(struct:pulled-point 0 0 49.920473174376625"
 #" 69.36929540795845 0 0) #(struct:pulled-point 0 0 90.5 98.8520474131"
 #"0821 0 0) #(struct:pulled-point 0 0 75.0 51.14795258689178 0 0)) 255"
 #" \"green\")) #(struct:translate 75.0 75.0 #(struct:ellipse 30 150 0 "
 #"255 #(struct:color 0 0 255 64)))) #(struct:translate 75.0 75.0 #(str"
 #"uct:ellipse 150 30 80 255 #(struct:color 0 0 255 57)))) #(struct:tra"
 #"nslate 75.0 75.0 #(struct:ellipse 150 30 70 255 #(struct:color 0 0 2"
 #"55 50)))) #(struct:translate 75.0 75.0 #(struct:ellipse 150 30 60 25"
 #"5 #(struct:color 0 0 255 42)))) #(struct:translate 75.0 75.0 #(struc"
 #"t:ellipse 150 30 50 255 #(struct:color 0 0 255 35)))) #(struct:trans"
 #"late 75.0 75.0 #(struct:ellipse 150 30 40 255 #(struct:color 0 0 255"
 #" 28)))) #(struct:translate 75.00000000000001 75.0 #(struct:ellipse 1"
 #"50 30 30 255 #(struct:color 0 0 255 21)))) #(struct:translate 75.0 7"
 #"5.0 #(struct:ellipse 150 30 20 255 #(struct:color 0 0 255 14)))) #(s"
 #"truct:translate 75.00000000000001 75.0 #(struct:ellipse 150 30 10 25"
 #"5 #(struct:color 0 0 255 10)))) #(struct:translate 75 75.0 #(struct:"
 #"ellipse 150 30 0 255 #(struct:color 0 0 255 10)))) #(struct:polygon "
 #"(#(struct:pulled-point 0 0 75 75.0 0 0) #(struct:pulled-point 0 0 75"
 #" 75.0 0 0) #(struct:pulled-point 0 0 75 75.0 0 0) #(struct:pulled-po"
 #"int 0 0 75 75.0 0 0)) 255 \"black\")) #(struct:bb 150.0 150.0 150.0)"
 #" #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"nice-overlay"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"( "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 90
(
 #"(#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"green\")) #"
 #"(struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 438
(
 #"(#(struct:translate 9.888543819998318 49.24293659480406 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"1.88854381999832 -30.433808521444913 0 0) #(struct:pulled-point 0 0 "
 #"-9.888543819998318 -30.43380852144492 0 0) #(struct:pulled-point 0 0"
 #" 32 0 0 0) #(struct:pulled-point 0 0 16.000000000000004 -49.24293659"
 #"480406 0 0)) 255 \"violet\")) #(struct:bb 51.77708763999664 49.24293"
 #"659480406 49.24293659480406) #f)"
) 0 6           4 21 272
(
 #"(#(struct:translate -0.0 51.96152422706632 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30.000000000000014 -51.96152422706632 0 0)) 25"
 #"5 \"blue\")) #(struct:bb 60.0 51.96152422706632 51.96152422706632) #"
 #"f)"
) 0 0 24 3 1 #" "
0 6           4 21 88
(
 #"(#(struct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\")) #(s"
 #"truct:bb 34 34 34) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 395
(
 #"(#(struct:translate 13.891854213354424 -0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 13.8918542133"
 #"54433 78.78462024097664 0 0) #(struct:pulled-point 0 0 8.88178419700"
 #"1252e-15 157.56924048195327 0 0) #(struct:pulled-point 0 0 -13.89185"
 #"4213354424 78.78462024097664 0 0)) 255 \"yellow\")) #(struct:bb 27.7"
 #"83708426708856 157.56924048195327 157.56924048195327) #f)"
) 0 6           4 21 272
(
 #"(#(struct:translate -0.0 51.96152422706632 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30.000000000000014 -51.96152422706632 0 0)) 25"
 #"5 \"blue\")) #(struct:bb 60.0 51.96152422706632 51.96152422706632) #"
 #"f)"
) 0 0 24 3 1 #" "
0 6           4 21 89
(
 #"(#(struct:translate 15 15 #(struct:ellipse 30 30 0 255 \"pink\")) #("
 #"struct:bb 30 30 30) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 429
(
 #"(#(struct:translate 1.8541019662496847 9.23305061152576 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 7"
 #".854101966249685 -5.706339097770921 0 0) #(struct:pulled-point 0 0 -"
 #"1.8541019662496847 -5.706339097770922 0 0) #(struct:pulled-point 0 0"
 #" 6 0 0 0) #(struct:pulled-point 0 0 3.000000000000001 -9.23305061152"
 #"576 0 0)) 255 \"red\")) #(struct:bb 9.70820393249937 9.2330506115257"
 #"6 9.23305061152576) #f)"
) 0 0 24 3 1 #" "
0 6           4 21 91
(
 #"(#(struct:translate 22 22 #(struct:ellipse 44 44 0 255 \"yellow\")) "
 #"#(struct:bb 44 44 44) #f)"
) 0 0 24 3 5 #"  )) "
0 6           4 21 5001
(
 #"(#(struct:overlay #(struct:translate 69.17507764050038 73.2447898740"
 #"6118 #(struct:scale 1.2 1.2 #(struct:translate 1.8541019662496847 9."
 #"23305061152576 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 7.854101966249685 -5.706339097770921 0 0) "
 #"#(struct:pulled-point 0 0 -1.8541019662496847 -5.706339097770922 0 0"
 #") #(struct:pulled-point 0 0 6 0 0 0) #(struct:pulled-point 0 0 3.000"
 #"000000000001 -9.23305061152576 0 0)) 255 \"red\")))) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 57.0 60.784620240976636 "
 #"#(struct:scale 1.2 1.2 #(struct:translate 15 15 #(struct:ellipse 30 "
 #"30 0 255 \"pink\")))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 61.10814578664557 0 #(struct:translate -0.0 157.5692404"
 #"8195327 #(struct:polygon (#(struct:pulled-point 0 0 13.8918542133544"
 #"24 0.0 0 0) #(struct:pulled-point 0 0 27.783708426708856 -78.7846202"
 #"4097664 0 0) #(struct:pulled-point 0 0 13.891854213354433 -157.56924"
 #"048195327 0 0) #(struct:pulled-point 0 0 0.0 -78.78462024097664 0 0)"
 #") 255 \"yellow\"))) #(struct:translate 0 3.7846202409766363 #(struct"
 #":overlay #(struct:translate 45.0 49.01923788646684 #(struct:translat"
 #"e 0.0 51.96152422706632 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"-0.0 -51.96152422706632 0 0) #(struct:pulled-point 0 0 60.0 -51.9615"
 #"2422706632 0 0) #(struct:pulled-point 0 0 30.000000000000014 -0.0 0 "
 #"0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 49.11145618000168 50.37853170259797 #(struct:translate -0"
 #".0 49.24293659480406 #(struct:polygon (#(struct:pulled-point 0 0 9.8"
 #"88543819998318 -49.24293659480406 0 0) #(struct:pulled-point 0 0 51."
 #"77708763999664 -18.809128073359144 0 0) #(struct:pulled-point 0 0 0."
 #"0 -18.809128073359137 0 0) #(struct:pulled-point 0 0 41.888543819998"
 #"32 -49.24293659480406 0 0) #(struct:pulled-point 0 0 25.888543819998"
 #"322 -0.0 0 0)) 255 \"violet\"))) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 55.0 55.0 #(struct:translate 0 40.0 #(struct"
 #":translate 20 -20 #(struct:ellipse 40 40 0 255 \"green\")))) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 58.0 58.0 #(stru"
 #"ct:translate 17 17 #(struct:ellipse 34 34 0 255 \"red\"))) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 60.0 0 #(struct:tr"
 #"anslate 0 150.0 #(struct:translate 15 -75 #(struct:ellipse 30 150 0 "
 #"255 #(struct:color 0 0 255 64))))) #(struct:translate 0 1.0935045065"
 #"594124 #(struct:overlay #(struct:translate 55.30660202306246 0 #(str"
 #"uct:translate -8.102331643265362 145.16235430435222 #(struct:transla"
 #"te 27.795729620202902 -71.25585881091163 #(struct:ellipse 150 30 80 "
 #"255 #(struct:color 0 0 255 57))))) #(struct:translate 0 3.2430679200"
 #"39948 #(struct:overlay #(struct:translate 45.73090360843438 0 #(stru"
 #"ct:translate -10.477803669648168 136.01007198245873 #(struct:transla"
 #"te 39.746900061213786 -65.34664440905809 #(struct:ellipse 150 30 70 "
 #"255 #(struct:color 0 0 255 50))))) #(struct:translate 0 5.2799434202"
 #"90536 #(struct:overlay #(struct:translate 35.313730334031135 0 #(str"
 #"uct:translate -10.804111390797722 122.835389436943 #(struct:translat"
 #"e 50.49038105676659 -57.4519052838329 #(struct:ellipse 150 30 60 255"
 #" #(struct:color 0 0 255 42))))) #(struct:translate 0 7.1267242045795"
 #"6 #(struct:overlay #(struct:translate 25.44044067690585 0 #(struct:t"
 #"ranslate -10.140178050180971 106.0682790371558 #(struct:translate 59"
 #".69973737327512 -47.81151908862526 #(struct:ellipse 150 30 50 255 #("
 #"struct:color 0 0 255 35))))) #(struct:translate 0 8.697200625436409 "
 #"#(struct:overlay #(struct:translate 16.74324005146947 0 #(struct:tra"
 #"nslate -8.838387430690908 86.27796340279991 #(struct:translate 67.09"
 #"514737922144 -36.71840407970578 #(struct:ellipse 150 30 40 255 #(str"
 #"uct:color 0 0 255 28))))) #(struct:translate 0 9.873289657125284 #(s"
 #"truct:overlay #(struct:translate 9.61651584688991 0 #(struct:transla"
 #"te -7.068421130722797 64.19588860920226 #(struct:translate 72.451905"
 #"2838329 -24.509618943233413 #(struct:ellipse 150 30 30 255 #(struct:"
 #"color 0 0 255 21))))) #(struct:translate 0 10.41717327440324 #(struc"
 #"t:overlay #(struct:translate 4.336572426599346 0 #(struct:translate "
 #"-4.943821135427498 40.82521782920214 #(struct:translate 75.607248708"
 #"82815 -11.556121437636527 #(struct:ellipse 150 30 20 255 #(struct:co"
 #"lor 0 0 255 14))))) #(struct:translate 0 9.575698414628079 #(struct:"
 #"overlay #(struct:translate 1.0935045065594409 0 #(struct:translate -"
 #"2.5588086474789833 17.94489500677419 #(struct:translate 76.465304140"
 #"91956 1.7485029701633454 #(struct:ellipse 150 30 10 255 #(struct:col"
 #"or 0 0 255 10))))) #(struct:translate 0 4.693397976937533 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 -0.0 #(struct:tra"
 #"nslate 75 15 #(struct:ellipse 150 30 0 255 #(struct:color 0 0 255 10"
 #"))))) #(struct:translate 75 15.0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 0 0 0 0)) 255 \"black\")))))))))))))))))))))))))))))))))))) #(struc"
 #"t:bb 150.0 157.56924048195327 157.56924048195327) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"sumar"
0 0 24 3 1 #")"
0           0
